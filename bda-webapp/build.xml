<?xml version="1.0"?>

<project name="bda-webapp" basedir="." default="unit-test">
    <property file="build.properties"/>

    <property name="src.dir" value="src/main/java"/>
    <property name="unit.test.dir" value="src/tests/unit"/>
    <property name="int.test.dir" value="src/tests/integration"/>
    <property name="web.dir" value="war"/>
    <property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
    <property name="unit.test.build.dir" value="target/unit-test-classes"/>
    <property name="int.test.build.dir" value="target/integration-test-classes"/>
    <property name="name" value="${ant.project.name}"/>

    <path id="master-classpath">
        <fileset dir="${web.dir}/WEB-INF/lib">
            <include name="*.jar"/>
        </fileset>
        <!-- We need the servlet API classes at build time, but not at deployment because
        the container will provide them: -->
        <fileset dir="lib">
            <include name="servlet*.jar"/>
        </fileset>
        <pathelement path="${build.dir}"/>
    </path>

    <path id="test-classpath">
        <pathelement location="${unit.test.build.dir}"/>
        <pathelement location="${int.test.build.dir}"/>
        <pathelement location="${int.test.dir}"/>
        <pathelement location="${web.dir}/WEB-INF/classes"/>
        <fileset dir="lib" includes="*.jar"/>
        <path location="${build.dir}"/>
        <fileset dir="${web.dir}/WEB-INF/lib"/>
    </path>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="target"/>
    </target>

    <target name="ci-build" depends="clean, unit-test, war"
            description="Used by Hudson when running the Continuous Integration build."/>

    <target name="build" description="Compile main source tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>

    <target name="unit-test" depends="build" description="Run unit tests">
        <mkdir dir="${unit.test.build.dir}"/>
        <javac destdir="${unit.test.build.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
            <src path="${unit.test.dir}"/>
            <classpath refid="test-classpath"/>
        </javac>
        <junit haltonfailure="false" failureproperty="tests.failed">
            <classpath refid="test-classpath"/>

            <formatter type="brief" usefile="false"/>
            <batchtest>
                <fileset dir="${unit.test.build.dir}">
                    <include name="**/*Test.*"/>
                </fileset>
            </batchtest>
        </junit>

        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            **** One or more tests failed! Check the output ... ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>

    <target name="integration-test" depends="build" description="Run integration tests">
        <mkdir dir="${int.test.build.dir}"/>
        <mkdir dir="target/test-results"/>
        <javac destdir="${int.test.build.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true" includeantruntime="false">
            <src path="${int.test.dir}"/>
            <classpath refid="test-classpath"/>
        </javac>
        <junit haltonfailure="false" failureproperty="tests.failed" printsummary="true">
            <classpath refid="test-classpath"/>

            <formatter type="plain" />
            <batchtest todir="target/test-results">
                <fileset dir="${int.test.build.dir}">
                    <include name="**/*Test.*"/>
                </fileset>
            </batchtest>
        </junit>

        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            **** One or more tests failed! Check the output ... ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>

    <target name="deploy" depends="build" description="Deploy application">
        <copy todir="${deploy.path}/${name}" preservelastmodified="true">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

    <target name="war" depends="build" description="Deploy application as a WAR file">
        <war destfile="target/${name}.war"
             webxml="${web.dir}/WEB-INF/web.xml">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </war>
    </target>

    <target name="deploywar" depends="build, war" description="Deploy application as a WAR file">
        <copy todir="${deploy.path}" preservelastmodified="true">
            <fileset dir="target" includes="${name}.war"/>
        </copy>
    </target>

    <!-- ============================================================== -->
    <!-- Tomcat tasks                                                   -->
    <!-- ============================================================== -->

    <path id="catalina-ant-classpath">
        <!-- We need the Catalina jars for Tomcat -->
        <fileset dir="lib">
            <include name="catalina-ant.jar"/>
        </fileset>
    </path>

    <taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>
    <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
        <classpath refid="catalina-ant-classpath"/>
    </taskdef>

    <target name="install" description="Install application in Tomcat">
        <install url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"
                 war="${name}"/>
    </target>

    <target name="reload" description="Reload application in Tomcat">
        <reload url="${tomcat.manager.url}"
                username="${tomcat.manager.username}"
                password="${tomcat.manager.password}"
                path="/${name}"/>
    </target>

    <target name="start" description="Start Tomcat application">
        <start url="${tomcat.manager.url}"
               username="${tomcat.manager.username}"
               password="${tomcat.manager.password}"
               path="/${name}"/>
    </target>

    <target name="stop" description="Stop Tomcat application">
        <stop url="${tomcat.manager.url}"
              username="${tomcat.manager.username}"
              password="${tomcat.manager.password}"
              path="/${name}"/>
    </target>

    <target name="list" description="List Tomcat applications">
        <list url="${tomcat.manager.url}"
              username="${tomcat.manager.username}"
              password="${tomcat.manager.password}"/>
    </target>

    <target name="undeploy" description="Un-Deploy application">
        <delete>
            <fileset dir="${deploy.path}/${name}">
                <include name="**/*.*"/>
            </fileset>
        </delete>
    </target>

    <!-- End Tomcat tasks -->

    <!-- DB Tasks -->
    <target name="update-database">
        <taskdef name="updateDatabase" classname="liquibase.ant.DatabaseUpdateTask"
                 classpathref="test-classpath"/>
        <updateDatabase changeLogFile="src/main/sql/create.project_certification_status.xml"
                        driver="com.mysql.jdbc.Driver"
                        url="jdbc:mysql://localhost:3306/buildmonitordb-dev"
                        username="buildmonitoruser"
                        password="password"
                        dropFirst="true"
                        classpathref="test-classpath"/>
    </target>


</project>