<?xml version="1.0" encoding="utf-8" ?>
<!--
$Id:  $
-->
<project name="ncia-wrapper" default="build-all" basedir="." 
	xmlns:ivy="antlib:org.apache.ivy.ant"
	>

	<property environment="env" />
	<property name="properties.file" value="${basedir}/sample.properties"/>
	<replaceregexp file="${properties.file}" byline="true" match="^([\w\d.]+)=(.*[\w\d\/\{\}\\]+)[ \t]+\r*$" replace="\1=\2"/>
	<replaceregexp file="${properties.file}" byline="true" match="^([\w\d.]+)=[ \t]+(.*[\w\d\/\{\}\\]+)\r*$" replace="\1=\2"/>
	<property file="${properties.file}" />

	<property name="bda-utils.dir" value="${basedir}/bda-utils" />
	<property name="lib.dir" value="${basedir}/lib" />

	<!-- Paths -->
	<path id="project.classpath">
		<fileset dir="${lib.dir}">
			<include name="simian-2.2.24.jar" />
			<include name="ivy-core-2.0.0-beta2.jar" />
			<include name="ivy-2.0.0-beta2.jar" />
		</fileset>
	</path>

	<path id="bda-utils.classpath">
		<fileset dir="${bda-utils.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- retrive ivy files then retrieve bda files -->
	<ant inheritAll="false" inheritRefs="false" antfile="ivy/bda-ivy-build.xml"
		target="retrieve-bda">
		<property name="bda-utils.dir" value="${bda-utils.dir}"/>
		<property name="lib.dir" value="${lib.dir}"/>
	</ant>

	<!-- Task definitions -->
	<taskdef uri="antlib:org.apache.ant.antunit" resource="org/apache/ant/antunit/antlib.xml">
		<classpath>
			<pathelement location="${bda-utils.dir}/antunit-1.0.jar" />
		</classpath>
	</taskdef>
	<taskdef name="xmlconfig" classname="com.xmlconfig.anttask.XmlConfig" classpathref="bda-utils.classpath" />
	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="project.classpath"/>
	<taskdef name="for" classname="net.sf.antcontrib.logic.ForTask">
		<classpath>
			<pathelement location="${bda-utils.dir}/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<!-- Includes-->
	<import file="${bda-utils.dir}/bda-build-utils-1.0.xml" />

	<!-- Targets -->
	<target name="install:jboss:stop" if="jboss.exists">
		<xmlconfig in="${jboss.home}/server/default/conf/jboss-service.xml" verbose="false">
			<read path="(//mbean)[@code='org.jboss.naming.NamingService']/attribute[@name='Port']" property="jboss.server.jndi.port.existing" />
		</xmlconfig>
		<jboss-stop-jboss jboss.server.jndi.port="${jboss.server.jndi.port.existing}"/>
	</target>
	<target name="install:jboss:start" unless="local.install">
		<jboss-start-jboss />
	</target>
	<target name="install:validation:pre-install">
		<validate-pre-install />
	</target>
	<target name="install:validation:post-install" unless="local.install">
		<validate-post-install />
	</target>
	<target name="-install:jboss:configure:update-shutdown">
		<jboss-update-shutdown />
	</target>
	<target name="install:ncia-query-grid:tomcat:stop" if="tomcat.ncia-query-grid.exists">
		<tomcat-stop tomcat.home="${tomcat.ncia-query-grid.home}"/>
	</target>
	<target name="install:ncia-query-grid:tomcat:start" >
		<tomcat-start tomcat.home="${tomcat.ncia-query-grid.home}"/>
	</target>
	<target name="install:mirc:tomcat:stop" if="tomcat.mirc.exists">
		<tomcat-stop tomcat.home="${tomcat.mirc.home}"/>
	</target>
	<target name="install:mirc:tomcat:start" >
		<tomcat-start tomcat.home="${tomcat.mirc.home}"/>
	</target>
</project>
