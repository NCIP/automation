insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.system.user','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.system.password','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.server','localhost');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.port','3306');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.name','genericdb');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.user','genericuser');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.password','password');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.url','jdbc:mysql://${mysql.database.server}:${mysql.database.port}/${mysql.database.name}');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.database.system.url','jdbc:mysql://${mysql.database.server}:${mysql.database.port}/');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.system.user','postgresadmin');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.system.password','password');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.server','localhost');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.port','5432');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.name','genericdb');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.user','genericuser');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.password','password');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.url','jdbc:postgresql://${postgresql.database.server}:${postgresql.database.port}/${postgresql.database.name}');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.database.system.url','jdbc:postgresql://${postgresql.database.server}:${postgresql.database.port}/template1');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.system.user','root');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.system.password','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.server','localhost');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.port','1553');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.name','genericdb');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.user','genericuser');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.password','password');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.url','jdbc:oracle:thin:@${oracle.database.server}:${oracle.database.port}/${oracle.database.name}');
insert into dashboard_properties (dashboard_key, dashboard_value) values('oracle.database.system.url','jdbc:oracle:thin:@${oracle.database.server}:${oracle.database.port}');
insert into dashboard_properties (dashboard_key, dashboard_value) values('mysql.minimum.version','5.0.27');
insert into dashboard_properties (dashboard_key, dashboard_value) values('postgresql.minimum.version','8.0.20');
insert into dashboard_properties (dashboard_key, dashboard_value) values('force.reinstall','true');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ant.minimum.version','1.7.0');
insert into dashboard_properties (dashboard_key, dashboard_value) values('java.major.version','1.5');
insert into dashboard_properties (dashboard_key, dashboard_value) values('java.minor.version','1.5.0_10');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bda.version','1.5.18');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ci.server.name','http://cbvapp-c1006.nci.nih.gov:48080/hudson/job');

insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.svn.project.url','http://gforge.nci.nih.gov/svnroot/bda-petstore');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.master.build.location','${petstore.svn.local.checkout}/trunk/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.exploded.dir.location','${petstore.svn.local.checkout}/trunk/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/petstore/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.ci-server.url','http://cbvapp-c1007.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.ci-server.jobname','bda-blueprints-ci');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('petstore.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.svn.project.url','http://gforge.nci.nih.gov/svnroot/caarray2/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.master.build.location','${caarray.svn.local.checkout}/software/master_build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.exploded.dir.location','${caarray.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/caarray2/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.ci-server.url','http://cbvapp-c1003.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.ci-server.jobname','caarray2-ci');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.override.properties','application.base.path=${user.home}/apps/caarray');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caarray.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.svn.project.url','https://ncisvn.nci.nih.gov/svn/nbia/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.master.build.location','${nbia.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.exploded.dir.location','${nbia.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/ncia/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.ci-server.url','http://cbv-ciweb-base.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.ci-server.jobname','ncia_ci');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.install.init.target','common:common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy,tomcat.ssh.server.username=@remote.username@,tomcat.ssh.server.hostname=@remote.hostname@,tomcat.ssh.port=22,tomcat.ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,tomcat.ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy,ctp.ssh.server.username=@remote.username@,ctp.ssh.server.hostname=@remote.hostname@,ctp.ssh.port=22,ctp.ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ctp.ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy,authentication.type=db');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('nbia.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.svn.project.url','http://gforge.nci.nih.gov/svnroot/cagwas/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.master.build.location','${cagwas.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.exploded.dir.location','${cagwas.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/cagwas/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagwas.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.database.type','postgresql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.svn.project.url','http://gforge.nci.nih.gov/svnroot/gpsxar/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.master.build.location','${protexpress.svn.local.checkout}/software/build-prot');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.exploded.dir.location','${protexpress.svn.local.checkout}/software/install-target/protExpress/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/protexpress/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('protexpress.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.svn.project.url','http://gforge.nci.nih.gov/svnroot/lex-browser/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.master.build.location','${bioportal.svn.local.checkout}/software');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.exploded.dir.location','${bioportal.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/bioportal/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('bioportal.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.svn.project.url','http://gforge.nci.nih.gov/svnroot/lexevs/base/v5/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.master.build.location','${lexevs.svn.local.checkout}/lexevs_bda/Lexevs_build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.exploded.dir.location','${lexevs.svn.local.checkout}/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/lexevs/v5/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.ci-server.url','http://nciaas-c112-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.ci-server.jobname','LexEVS.4.3');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('lexevs.override.properties','');


insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.svn.project.url','http://gforge.nci.nih.gov/svnroot/security/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.master.build.location','${upt.svn.local.checkout}/software/buildupt');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.exploded.dir.location','${upt.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/csmupt/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.ci-server.url','http://cbvapp-c1002.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.ci-server.jobname','csm-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.override.properties','upt.31.installed=false,upt.32.installed=false,upt.40.installed=false,upt.41.installed=false,upt.42.installed=false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('upt.single-command.package.upgrader.target','dist:upgrader');


insert into dashboard_properties (dashboard_key, dashboard_value) values('po.database.type','postgresql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.svn.project.url','https://ncisvn.nci.nih.gov/svn/coppa/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.master.build.location','${po.svn.local.checkout}/code/build-po');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.exploded.dir.location','${po.svn.local.checkout}/code/target/po/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/coppa/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.ci-server.url','http://cbvapp-c1005.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.ci-server.jobname','po-bda-ci');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy,database.system.user=${database.system.user},database.system.password=${database.system.password},database.server=${database.server},database.port=${database.port},database.name=${database.name},database.user=${database.user}');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('po.override.properties','po-grid-jboss.grid.secure.enable=false');

insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.svn.project.url','http://gforge.nci.nih.gov/svnroot/caintegrator2/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.master.build.location','${caintegrator2.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.exploded.dir.location','${caintegrator2.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/cai2/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.ci-server.url','http://cbvapp-c1004.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.ci-server.jobname','caintegrator2-ci');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caintegrator2.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.svn.project.url','http://gforge.nci.nih.gov/svnroot/calab/cananolab/trunk/');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.master.build.location','${cananolab.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.exploded.dir.location','${cananolab.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/cananolab/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cananolab.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.database.type','postgresql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.svn.project.url','http://gforge.nci.nih.gov/svnroot/coppa/trunk/');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.master.build.location','${pa.svn.local.checkout}/code/build-pa');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.exploded.dir.location','${pa.svn.local.checkout}/software/target');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/coppa/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.ci-server.url','http://cbvapp-c1005.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.ci-server.jobname','pa-bda-ci');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pa.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.svn.project.url','http://gforge.nci.nih.gov/svnroot/rembrandt/trunk/');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.master.build.location','${rembrandt.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.exploded.dir.location','${rembrandt.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/rembrandt/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('rembrandt.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.svn.project.url','http://gforge.nci.nih.gov/svnroot/cabiodb/cabioapi/trunk/');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.master.build.location','${cabio.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.exploded.dir.location','${cabio.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/cabio/cabioapi/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.ci-server.url','http://ncias-d185-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.ci-server.jobname','cabioapi');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.optional.features','build:database-integration');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cabio.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.svn.project.url','http://gforge.nci.nih.gov/svnroot/ispy/trunk/');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.master.build.location','${ispy.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.exploded.dir.location','${ispy.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/ispy/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ispy.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.svn.project.url','http://gforge.nci.nih.gov/svnroot/cpas/trunk/cpas');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.master.build.location','${cpas.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.exploded.dir.location','${cpas.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/cpas/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cpas.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.svn.project.url','http://gforge.nci.nih.gov/svnroot/ccts-installer/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.master.build.location','${ccts.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.exploded.dir.location','${ccts.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/ccts/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.svn.project.url','https://ncisvn.nci.nih.gov/svn/tcgainformatics/tcga-qc/trunk/TCGA-Core/');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.master.build.location','${tcga.svn.local.checkout}/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.exploded.dir.location','${tcga.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/tcga/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('tcga.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.svn.project.url','https://ncisvn.nci.nih.gov/svn/cdebrowser/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.master.build.location','${cadsr-cdebrowser.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.exploded.dir.location','${cadsr-cdebrowser.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/CDEBrowser');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.ci-server.url','http://ncias-c357-v:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.ci-server.jobname','CDEBrowser');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdebrowser.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.svn.project.url','https://ncisvn.nci.nih.gov/svn/umlmodelbrowser/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.master.build.location','${cadsr-umlmodelbrowser.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.exploded.dir.location','${cadsr-umlmodelbrowser.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/UMLModelBrowser');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.ci-server.url','http://ncias-c357-v:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.ci-server.jobname','UMLModelBrowser');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-umlmodelbrowser.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.svn.project.url','https://ncisvn.nci.nih.gov/svn/formbuilder/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.master.build.location','${cadsr-formbuilder.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.exploded.dir.location','${cadsr-formbuilder.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/FormBuilder');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.ci-server.url','http://ncias-c357-v:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.ci-server.jobname','Formbuilder');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-formbuilder.override.properties','');


insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.svn.project.url','https://ncisvn.nci.nih.gov/svn/sentinel/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.master.build.location','${cadsr-sentinel.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.exploded.dir.location','${cadsr-sentinel.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/Sentinel');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.ci-server.url','http://ncias-c357-v:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.ci-server.jobname','Sentinel');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-sentinel.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.svn.project.url','https://ncisvn.nci.nih.gov/svn/freestylesearch/trunk/freestylesearch');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.master.build.location','${cadsr-freestylesearch.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.exploded.dir.location','${cadsr-freestylesearch.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/Freestyle_Search');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.ci-server.url','http://ncias-c357-v:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.ci-server.jobname','FreestyleSearch');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-freestylesearch.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.svn.project.url','https://ncisvn.nci.nih.gov/svn/cdecurate/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.master.build.location','${cadsr-cdecurate.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.exploded.dir.location','${cadsr-cdecurate.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/cdecurate');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cdecurate.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.svn.project.url','https://ncisvn.nci.nih.gov/svn/semanticTools/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.master.build.location','${cadsr-semanticTools.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.exploded.dir.location','${cadsr-semanticTools.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/semanticTools');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-semanticTools.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.svn.project.url','https://ncisvn.nci.nih.gov/svn/cadsrdb/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.master.build.location','${cadsr-cadsrdb.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.exploded.dir.location','${cadsr-cadsrdb.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/cadsrdb');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr-cadsrdb.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.svn.project.url','http://gforge.nci.nih.gov/svnroot/cadsr/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.master.build.location','${cadsr.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.exploded.dir.location','${cadsr.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/cadsr');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cadsr.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.svn.project.url','https://ncisvn.nci.nih.gov/svn/camod/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.master.build.location','${camod.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.exploded.dir.location','${camod.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/caMOD');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.ci-server.url','http://ncias-c261-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.ci-server.jobname','camod_upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('camod.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.svn.project.url','https://ncisvn.nci.nih.gov/svn/evstree/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.master.build.location','${evstree.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.exploded.dir.location','${evstree.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/evstree');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.ci-server.url','http://ncias-c261-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.ci-server.jobname','evstree');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('evstree.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.svn.project.url','https://ncisvn.nci.nih.gov/svn/catissue/branches/caTISSUE_SUITE_MAIN_BRANCH_07_Sep_09/catissuecore');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.master.build.location','${catissue.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.exploded.dir.location','${catissue.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/catissue/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('catissue.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.svn.project.url','https://ncisvn.nci.nih.gov/svn/cab2b/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.master.build.location','${cab2b.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.exploded.dir.location','${cab2b.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/cab2b/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cab2b.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.svn.project.url','http://gforge.nci.nih.gov/svnroot/cagrid/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.master.build.location','${cagrid.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.exploded.dir.location','${cagrid.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/cagrid/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cagrid.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.svn.project.url','http://gforge.nci.nih.gov/svnroot/ncit/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.master.build.location','${ncit.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.exploded.dir.location','${ncit.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/ncit/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.ci-server.url','http://ncias-d171-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.ci-server.jobname','ncitbrowser-nightly');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.build:database-integration.macro.list','database-install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.optional.features','build:check-commandline-installer,build:database-integration');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ncit.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.svn.project.url','http://gforge.nci.nih.gov/svnroot/reportwriter/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.master.build.location','${reportwriter.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.exploded.dir.location','${reportwriter.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/reportwriter/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.ci-server.url','http://ncias-d171-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.ci-server.jobname','reportwriter');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.optional.features','build:check-commandline-installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('reportwriter.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.svn.project.url','http://gforge.nci.nih.gov/svnroot/genepattern/trunk/wrong');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.master.build.location','${genepattern.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.exploded.dir.location','${genepattern.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/genepattern/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('genepattern.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.svn.project.url','http://gforge.nci.nih.gov/svnroot/cactus/ctods');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.master.build.location','${ctods.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.exploded.dir.location','${ctods.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/ctods/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ctods.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.svn.project.url','https://ncisvn.nci.nih.gov/svn/c3pr/trunk/c3prv2/codebase');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.master.build.location','${ccts-c3pr.svn.local.checkout}/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.exploded.dir.location','${ccts-c3pr.svn.local.checkout}/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/c3pr/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.ci-server.url','http://ncias-d228-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.ci-server.jobname','C3PR-PostgresSQL');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-c3pr.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.svn.project.url','https://ncisvn.nci.nih.gov/svn/caaersappdev/trunk/caAERS');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.master.build.location','${ccts-caaers.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.exploded.dir.location','${ccts-caaers.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/ccts-suite');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.ci-server.url','http://ncias-d228-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.ci-server.jobname','caAERS-PostgresSQL');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.override.properties','tomcat.hostname=localhost');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caaers.single-command.package.upgrader.target','dist:upgrader');


insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.svn.project.url','https://ncisvn.nci.nih.gov/svn/cabigintegrationhub/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.master.build.location','${ccts-caXchange.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.exploded.dir.location','${ccts-caXchange.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/caxchange/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.ci-server.url','http://ncias-d228-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.ci-server.jobname','caBIGIntegrationHub');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-caXchange.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.database.type','postgresql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.svn.project.url','https://ncisvn.nci.nih.gov/svn/ctodslabviewer/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.master.build.location','${ccts-labviewer.svn.local.checkout}/Code/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.exploded.dir.location','${ccts-labviewer.svn.local.checkout}/Code/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.svn.private.url','https://ncisvn.nci.nih.gov/svn/scm-props/trunk/dev/ccts-suite');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.ci-server.url','http://ncias-d228-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.ci-server.jobname','LabViewer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.override.properties','application.base.path.linux=${user.home}/apps/labviewer,exclude.tomcat.backup=true,tomcat.grid.secure.enable=false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.optional.features','build:check-commandline-installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-labviewer.single-command.package.upgrader.target','dist:upgrader');


insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.database.type','postgresql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.svn.project.url','https://ncisvn.nci.nih.gov/svn/psc/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.master.build.location','${ccts-psc.svn.local.checkout}/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.exploded.dir.location','${ccts-psc.svn.local.checkout}/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.svn.private.url','http://gforge.nci.nih.gov/svn/scm-private/trunk/psc');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.ci-server.url','https://ctms-ci.nubic.northwestern.edu');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.ci-server.jobname','PSC%20stable%20matrix');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-psc.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.database.type','oracle');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.svn.project.url','https://ncisvn.nci.nih.gov/svn/c3dtools/trunk/clinicalConnector');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.master.build.location','${ccts-clinicalconnector.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.exploded.dir.location','${ccts-clinicalconnector.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.svn.private.url','http://gforge.nci.nih.gov/svn/scm-private/trunk/psc');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.use.genericDB','false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.override.properties','database.type=oracle,tomcat.grid.secure.enable=false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ccts-clinicalconnector.single-command.package.upgrader.target','dist:upgrader');


insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.svn.project.url','http://gforge.nci.nih.gov/svnroot/cacoresdk/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.master.build.location','${cacoresdk.svn.local.checkout}/sdk-toolkit/example-project/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.single-command.build.target','build:SDK');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.exploded.dir.location','${cacoresdk.svn.local.checkout}/sdk-toolkit/example-project/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/cacoresdk/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.ci-server.url','http://ncias-c124-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.ci-server.jobname','sdk-package-modules');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.remote-upgrade.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy,INSTALL_CONTAINER=false');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.override.properties','application.base.path.linux=${user.home}/apps/cacoresdk-app,jboss.server.hostname=localhost,properties.file=install.properties,DB_TYPE=mysql,DB_SERVER=localhost,DB_SERVER_PORT=3306,DB_NAME=genericdb,DB_USERNAME=genericuser,DB_PASSWORD=password,exclude.jboss.backup=true');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.bdautils.build.location','${cacoresdk.svn.local.checkout}/sdk-toolkit/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.optional.features','build:remote-upgrade,build:private-repository-properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('cacoresdk.exclude.obfuscate.properties','true');


insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.svn.project.url','http://gforge.nci.nih.gov/svnroot/cacoresdk/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.master.build.location','${workbench.svn.local.checkout}/sdk-workbench/workbench-webstart-project/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.exploded.dir.location','${workbench.svn.local.checkout}/sdk-workbench/workbench-webstart-project/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/sdk-workbench/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.ci-server.url','http://ncias-c125-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.ci-server.jobname','workbench');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.exclude.obfuscate.properties','true');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy,application.base.path.linux=${user.home}/apps/workbench-app');
insert into dashboard_properties (dashboard_key, dashboard_value) values('workbench.override.properties','application.base.path.linux=${user.home}/apps/workbench-app');


insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.svn.project.url','http://gforge.nci.nih.gov/svnroot/pro-ctcae/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.master.build.location','${pro-ctcae.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.exploded.dir.location','${pro-ctcae.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/pro-ctcae/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.ci-server.url','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.ci-server.jobname','');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.install.init.target','install:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.remote-upgrade.target','deploy:remote:upgrade');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('pro-ctcae.single-command.package.upgrader.target','dist:upgrader');


insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.svn.project.url','https://ncisvn.nci.nih.gov/svn/caadapter/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.master.build.location','${caAdapter.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.exploded.dir.location','${caAdapter.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/caAdapter/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.ci-server.url','http://ncias-d341-v.nci.nih.gov:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.ci-server.jobname','caadapter-mms');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.optional.features','build:private-repository-properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('caAdapter.override.properties','');

insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.database.type','mysql');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.svn.username','narram');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.svn.password','Temp123$');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.svn.project.url','http://caehrorg.jira.com/svn/ESD/trunk');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.svn.local.checkout','working/bda_certification');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.master.build.location','${ESD.svn.local.checkout}/software/build');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.master.install.location','working/installer');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.single-command.build.target','build:all');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.single-command.package.target','dist:installer:prep');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.database.integration.target','install:database');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.master.build.file','build.xml');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.exploded.dir.location','${ESD.svn.local.checkout}/software/target/dist/exploded');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.svn.private.url','http://gforge.nci.nih.gov/svnroot/scm-private/trunk/projects/ESD/properties');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.local.private.checkout','working/scm_private');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.ci-server.url','http://ci.caehr.net:48080');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.ci-server.jobname','ESD_Full_Deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.single-command.deployment.target','install');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.single-command.distribution.target','dist');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.install.init.target','common:init');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.remote-upgrade.target','deploy:remote:upgrade:ahp');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.override.remote.properties','ssh.server.username=@remote.username@,ssh.server.hostname=@remote.hostname@,ssh.port=22,ssh.key.file=${user.home}/ssh-pub-key/id_dsa_bda,ssh.dir.temp=${user.home}/buildcertification/build/working/remote-deploy');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.single-command.package.upgrader.target','dist:upgrader');
insert into dashboard_properties (dashboard_key, dashboard_value) values('ESD.override.properties','');