
<project name="test-properties" default="run" basedir=".">
	<import file="test-common.xml" />
	<target name="run">
		<mkdir dir="${antunit.xml.report.dir}"/>
		<antunit failOnError="false">
			<file file="${ant.file}"/>
			<xmllistener toDir="${antunit.xml.report.dir}" logLevel="verbose" />
			<plainlistener logLevel="info"/>
		</antunit>      
		<osfamily property="os.family"/>
		<if>
			<or>
				<equals arg1="${os.family}" arg2="mac"/>
				<equals arg1="${os.family}" arg2="unix"/>
			</or>
			<then>
				<exec executable="egrep">
					<arg line="'**** Entering|**** Exiting|passed all validation rules.|failed validation.' ${antunit.xml.report.dir}/TEST-test-suite-properties-fail-3-jdk15_xml.xml"/>
				</exec>
			</then>
			<else>
				<echo mesage="Grep not supported on windows"/>
			</else>
		</if>
	</target>
	<target name="suiteSetUp">
		<!-- Use this to run something when you enter this suite, like if your tests are upgrade related you can do an install first to make sure things are in a good state.-->
		<echo message="**** Entering Properties suiteSetUp"/>
		<ant inheritAll="false" inheritrefs="false"
			antfile="build.xml"             
			dir="${build.dir}"              
			target="dist:installer:prep"        
			>                               
		</ant>                  
		<echo message="**** Exiting Properties suiteSetUp"/>
	</target>
	<target name="test:property:fail:cgmm.application.context-syntax">
		<echo message="**** Entering test:property:fail:cgmm.application.context"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			cgmm.application.context=fa il
			evaluate.property.name=cgmm.application.context
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:cgmm.application.context"/>
	</target>
	<target name="test:property:fail:cgmm.application.name-syntax">
		<echo message="**** Entering test:property:fail:cgmm.application.name"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			cgmm.application.name=fa/il
			evaluate.property.name=cgmm.application.name
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:cgmm.application.name"/>
	</target>
	<target name="test:property:fail:database.context.path-syntax">
		<echo message="**** Entering test:property:fail:database.context.path"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.context.path=fa il
			evaluate.property.name=database.context.path
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.context.path"/>
	</target>
	<target name="test:property:fail:database.driver-syntax">
		<echo message="**** Entering test:property:fail:database.driver"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.driver=com.m ysql.jdbc.Driver
			evaluate.property.name=database.driver
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.driver"/>
	</target>
	<target name="test:property:fail:database.driver-jdbc">
		<echo message="**** Entering test:property:fail:database.driver"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.driver=jdbc.joe://fail
			evaluate.property.name=database.driver
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.driver"/>
	</target>
	<target name="test:property:fail:database.driver.file-syntax">
		<echo message="**** Entering test:property:fail:database.driver.file"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.driver.file=c:\\mysql-connector-java-5.0.8.jar
			evaluate.property.name=database.driver.file
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.driver.file"/>
	</target>
	<target name="test:property:fail:database.driver.file-value">
		<echo message="**** Entering test:property:fail:database.driver.file"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.driver.file=joe.jar
			evaluate.property.name=database.driver.file
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.driver.file"/>
	</target>
	<target name="test:property:fail:database.drop-schema-syntax">
		<echo message="**** Entering test:property:fail:database.drop-schema"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.drop-schema=fa il
			evaluate.property.name=database.drop-schema
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.drop-schema"/>
	</target>
	<target name="test:property:fail:database.drop-schema-tf">
		<echo message="**** Entering test:property:fail:database.drop-schema"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.drop-schema=joe
			evaluate.property.name=database.drop-schema
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.drop-schema"/>
	</target>
	<target name="test:property:fail:database.re-create-syntax">
		<echo message="**** Entering test:property:fail:database.re-create"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.re-create=fa/il
			evaluate.property.name=database.re-create
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.re-create"/>
	</target>
	<target name="test:property:fail:database.re-create-tf">
		<echo message="**** Entering test:property:fail:database.re-create"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.re-create=joe
			evaluate.property.name=database.re-create
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.re-create"/>
	</target>
	<target name="test:property:fail:database.jndi.datasource.name-syntax">
		<echo message="**** Entering test:property:fail:database.jndi.datasource.name"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.jndi.datasource.name=fa\\il
			evaluate.property.name=database.jndi.datasource.name
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.jndi.datasource.name"/>
	</target>
	<target name="test:property:fail:database.name-syntax">
		<echo message="**** Entering test:property:fail:database.name"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.name=fa il
			evaluate.property.name=database.name
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.name"/>
	</target>
	<target name="test:property:fail:database.name-value">
		<echo message="**** Entering test:property:fail:database.name"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.name=mysql
			evaluate.property.name=database.name
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.name"/>
	</target>
	<target name="test:property:fail:database.password-syntax">
		<echo message="**** Entering test:property:fail:database.password"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.password=fa/il
			evaluate.property.name=database.password
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.password"/>
	</target>
	<target name="test:property:fail:database.password-value">
		<echo message="**** Entering test:property:fail:database.password"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.password=fail&lt;condition
			evaluate.property.name=database.password
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.password"/>
	</target>
	<target name="test:property:fail:database.port-syntax">
		<echo message="**** Entering test:property:fail:database.port"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.port=fa il
			evaluate.property.name=database.port
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.port"/>
	</target>
	<target name="test:property:fail:database.port-value">
		<echo message="**** Entering test:property:fail:database.port"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.port=70000
			evaluate.property.name=database.port
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.port"/>
	</target>
	<target name="test:property:fail:database.schema-syntax">
		<echo message="**** Entering test:property:fail:database.schema"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.schema=fa il
			evaluate.property.name=database.schema
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.schema"/>
	</target>
	<target name="test:property:fail:database.schema-value">
		<echo message="**** Entering test:property:fail:database.schema"/>
		<echo file="${dist.exploded.dir}/local.properties" append="false">
			database.schema=fail
			evaluate.property.name=database.schema
			groovy.debug=true
		</echo>
		<replaceregexp file="${dist.exploded.dir}/local.properties" byline="true"
			match="^\s+(.*)\s*$"
			replace="\1"
			/>
		<execute-property-test-fail
			/>
		<echo message="**** Exiting test:property:fail:database.schema"/>
	</target>
</project>
