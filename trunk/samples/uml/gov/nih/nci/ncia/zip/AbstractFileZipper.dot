#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.8 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// gov.nih.nci.ncia.zip.AbstractFileZipper
	c69705 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AbstractFileZipper.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td><font face="Helvetica-Oblique"> AbstractFileZipper </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"><font face="Helvetica-Oblique" point-size="10.0"> + startNewFile(outputFileName : String, sequenceNumber : int) </font></td></tr>
			<tr><td align="left"><font face="Helvetica-Oblique" point-size="10.0"> + closeFile() </font></td></tr>
			<tr><td align="left"><font face="Helvetica-Oblique" point-size="10.0"> + zip(directory : String, filePath : String, fileName : String) </font></td></tr>
			<tr><td align="left"><font face="Helvetica-Oblique" point-size="10.0"> + getFileSize() : long </font></td></tr>
			<tr><td align="left"><font face="Helvetica-Oblique" point-size="10.0"> + getListOfZipFiles() : List&lt;String&gt; </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// gov.nih.nci.ncia.zip.ZipFiles
	c69707 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ZipFiles.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> ZipFiles </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + BUFFER : int </td></tr>
			<tr><td align="left"> + NO_COMPRESSION : int </td></tr>
			<tr><td align="left"> + DEFAULT_COMPRESSION : int </td></tr>
			<tr><td align="left"> + MID_COMPRESSION : int </td></tr>
			<tr><td align="left"> + MAX_COMPRESSION : int </td></tr>
			<tr><td align="left"> + FILE : String </td></tr>
			<tr><td align="left"> - logger : Logger </td></tr>
			<tr><td align="left"> - origin : BufferedInputStream </td></tr>
			<tr><td align="left"> - out : ZipOutputStream </td></tr>
			<tr><td align="left"> - data : byte[] </td></tr>
			<tr><td align="left"> - fileList : List&lt;String&gt; </td></tr>
			<tr><td align="left"> - outputFileName : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + startNewFile(fileName : String, sequenceNumber : int) </td></tr>
			<tr><td align="left"> + getFileSize() : long </td></tr>
			<tr><td align="left"> + zip(directoryInZip : String, filePath : String, fileName : String) </td></tr>
			<tr><td align="left"> + closeFile() </td></tr>
			<tr><td align="left"> + getListOfZipFiles() : List&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//gov.nih.nci.ncia.zip.ZipFiles extends gov.nih.nci.ncia.zip.AbstractFileZipper
	c69705:p -> c69707:p [dir=back,arrowtail=empty];
}

